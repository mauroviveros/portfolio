---
import type { string } from 'astro:schema';

interface Props {
    href?: string;
    label: string;
    type: 'icon' | 'flat';
    class?: string;
    style?: string;
    id?: string;
    elementType?: 'anchor' | 'button';
    target?: '_blank' | '_self' | '_parent' | '_top';
}

const { href="#", label, type, target="_blank", elementType="anchor" } = Astro.props;

const getClass = (type: string) => {
    switch (type) {
        case 'icon': return 'rounded-full p-3';
        case 'flat': return 'bg-primary py-2 px-4 rounded-lg font-semibold shadow';
        default: return '';
    }
}
---
{
    elementType === 'anchor' ? (
        <a href={href} id={Astro.props.id}
            aria-label={label}
            target={target}
            class:list={[getClass(type), 'flex gap-2 duration-300 text-slate-100 hover:shadow-xl hover:-translate-y-1', Astro.props.class]}
            style={Astro.props.style}
        >
            <slot/>
        </a>
    ) : (
        <button id={Astro.props.id}
            aria-label={label}
            class:list={[getClass(type), 'flex gap-2 duration-300 text-slate-100 hover:shadow-xl hover:-translate-y-1', Astro.props.class]}
            style={Astro.props.style}
        >
            <slot/>
        </button>
    )
}